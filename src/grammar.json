{
  "name": "pezzo",
  "rules": {
    "source_file": {
      "type": "PREC",
      "value": 1,
      "content": {
        "type": "REPEAT",
        "content": {
          "type": "CHOICE",
          "members": [
            {
              "type": "SYMBOL",
              "name": "exec_rule"
            }
          ]
        }
      }
    },
    "exec_rule": {
      "type": "SEQ",
      "members": [
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "rule"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "{"
          }
        },
        {
          "type": "REPEAT",
          "content": {
            "type": "SYMBOL",
            "name": "_exec_statement"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "}"
          }
        }
      ]
    },
    "_exec_statement": {
      "type": "ALIAS",
      "content": {
        "type": "CHOICE",
        "members": [
          {
            "type": "SYMBOL",
            "name": "askpass_statement"
          },
          {
            "type": "SYMBOL",
            "name": "keepenv_statement"
          }
        ]
      },
      "named": true,
      "value": "statement"
    },
    "askpass_statement": {
      "type": "SEQ",
      "members": [
        {
          "type": "FIELD",
          "name": "key",
          "content": {
            "type": "SYMBOL",
            "name": "askpass"
          }
        },
        {
          "type": "FIELD",
          "name": "operator",
          "content": {
            "type": "SYMBOL",
            "name": "assign"
          }
        },
        {
          "type": "FIELD",
          "name": "value",
          "content": {
            "type": "SYMBOL",
            "name": "bool"
          }
        },
        {
          "type": "FIELD",
          "name": "end",
          "content": {
            "type": "SYMBOL",
            "name": "semicolon"
          }
        }
      ]
    },
    "keepenv_statement": {
      "type": "SEQ",
      "members": [
        {
          "type": "FIELD",
          "name": "key",
          "content": {
            "type": "SYMBOL",
            "name": "keepenv"
          }
        },
        {
          "type": "FIELD",
          "name": "operator",
          "content": {
            "type": "SYMBOL",
            "name": "assign"
          }
        },
        {
          "type": "FIELD",
          "name": "value",
          "content": {
            "type": "SYMBOL",
            "name": "bool"
          }
        },
        {
          "type": "FIELD",
          "name": "end",
          "content": {
            "type": "SYMBOL",
            "name": "semicolon"
          }
        }
      ]
    },
    "askpass": {
      "type": "TOKEN",
      "content": {
        "type": "STRING",
        "value": "askpass"
      }
    },
    "keepenv": {
      "type": "TOKEN",
      "content": {
        "type": "STRING",
        "value": "keepenv"
      }
    },
    "semicolon": {
      "type": "TOKEN",
      "content": {
        "type": "STRING",
        "value": ";"
      }
    },
    "assign": {
      "type": "TOKEN",
      "content": {
        "type": "STRING",
        "value": "="
      }
    },
    "bool": {
      "type": "CHOICE",
      "members": [
        {
          "type": "STRING",
          "value": "true"
        },
        {
          "type": "STRING",
          "value": "false"
        }
      ]
    },
    "comment": {
      "type": "TOKEN",
      "content": {
        "type": "PREC",
        "value": -10,
        "content": {
          "type": "PATTERN",
          "value": "#.*"
        }
      }
    }
  },
  "extras": [
    {
      "type": "PATTERN",
      "value": "\\s"
    },
    {
      "type": "PATTERN",
      "value": "\\r?\\n"
    },
    {
      "type": "PATTERN",
      "value": "( |\\t|\\v|\\f)"
    },
    {
      "type": "SYMBOL",
      "name": "comment"
    }
  ],
  "conflicts": [],
  "precedences": [],
  "externals": [],
  "inline": [],
  "supertypes": []
}

